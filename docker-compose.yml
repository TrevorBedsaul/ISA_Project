mysql:
  image: mysql:5.7.14
  container_name: mysql
  environment:
    - MYSQL_ROOT_PASSWORD=$$3cureUS
    - MYSQL_DATABASE=cs4501
    - MYSQL_USER=www
    - MYSQL_PASSWORD=$$3cureUS
  expose:
    - "3306"
  volumes:
    - ./microservices/init_test_db.sh:/docker-entrypoint-initdb.d/init_test_db.sh

models:
    container_name: models
    image: tp33/django
    restart: always
    external_links:
      -  mysql:db
    volumes:
      - ./microservices:/app
    expose:
      - "8000"
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py loaddata db.json && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/services/wsgi.py"

exp:
   container_name: exp
   image: tp33/django
   restart: always
   links:
      - models:models-api
      - kafka:kafka
      - es:es
   expose:
      - "8000"
   volumes:
      - ./experience:/app
   command: "mod_wsgi-express start-server --reload-on-changes /app/experience/wsgi.py"

web:
   image: tp33/django
   container_name: web
   restart: always
   links:
      - exp:exp-api
   expose:
      - "8000"
   volumes:
      - ./web_layer:/app
   command: "mod_wsgi-express start-server --reload-on-changes /app/web_layer/wsgi.py"

web1:
   image: tp33/django
   container_name: web1
   restart: always
   links:
      - exp:exp-api
   expose:
      - "8000"
   volumes:
      - ./web_layer:/app
   command: "mod_wsgi-express start-server --reload-on-changes /app/web_layer/wsgi.py"

nginx:
  image: nginx
  ports:
    - "80:80"
  expose:
    - "80"
  links:
    - web
    - web1
  volumes:
    - ./nginx:/etc/nginx

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   expose:
      - "9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./batch:/script
   command: "python /script/script.py"

selenium-chrome:
  image: selenium/standalone-chrome
  container_name: selenium-chrome
  links:
    - web:web
  ports:
    - "4444:4444"

selenium-test:
  image: tp33/django
  container_name: selenium-test
  links:
    - selenium-chrome:selenium-chrome
    - web:web
  volumes:
    - ./selenium:/app
  command: bash -c "pip install selenium==3.11.0 && python /app/selenium_tests.py && tail -f /dev/null"
